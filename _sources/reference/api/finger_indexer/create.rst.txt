.. index:: 
  !FingerIndexer.create Method
  
.. _finger_indexer_create_class_method:

===============================================================================
FingerIndexer.create Method
===============================================================================

Module: :ref:`FingerIndexer<finger_indexer_class>`

Definition
----------

Creates an empty finger indexer.


.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        @staticmethod
        create(maximum_template_record_count: int, format: FingerDataFormat) -> FingerIndexer

      **Parameters**

        .. line-block::

          ``maximum_template_record_count`` int
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``format`` :ref:`FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          :ref:`FingerIndexer<finger_indexer_class>`
          The newly created finger indexer.

      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        static FingerIndexer create(int maximumTemplateRecordCount, FingerDataFormat format)

      **Parameters**

        .. line-block::

          ``maximumTemplateRecordCount`` int
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``format`` :ref:`FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          :ref:`FingerIndexer<finger_indexer_class>`
          The newly created finger indexer.

      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        public static FingerIndexer Create(int maximumTemplateRecordCount, FingerDataFormat format)

      **Parameters**

        .. line-block::

          ``maximumTemplateRecordCount`` int
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``format`` :ref:`FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          :ref:`FingerIndexer<finger_indexer_class>`
          The newly created finger indexer.

      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        public static FingerIndexer create(int maximumTemplateRecordCount, FingerDataFormat format) throws FingerException

      **Parameters**

        .. line-block::

          ``maximumTemplateRecordCount`` int
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``format`` :ref:`FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          :ref:`FingerIndexer<finger_indexer_class>`
          The newly created finger indexer.

      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        public static func create(maximumTemplateRecordCount: Int32, format: FingerDataFormat) throws -> FingerIndexer

      **Parameters**

        .. line-block::

          ``maximumTemplateRecordCount`` Int32
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``format`` :ref:`FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          :ref:`FingerIndexer<finger_indexer_class>`
          The newly created finger indexer.

      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: C
      :sync: C

      .. code:: C

        int id3FingerIndexer_Create (
            ID3_FINGER_INDEXER hFingerIndexer, 
            int maximumTemplateRecordCount, 
            id3FingerDataFormat eFormat)

      **Parameters**

        .. line-block::

          ``hFingerIndexer`` :ref:`ID3_FINGER_INDEXER<finger_indexer_class>`
          :guilabel:`in` Handle to the FingerIndexer object.

          ``maximumTemplateRecordCount`` int
          :guilabel:`in` Maximum number of template records that this finger indexer can hold.

          ``eFormat`` :ref:`id3FingerDataFormat<finger_data_format_enum>`
          :guilabel:`in` Finger data format accepted by this finger indexer.


      **Returns**

        .. line-block::

          ``int``
          An error code.
          See :ref:`id3FingerError<finger_error_enum>` file for the list of possible error codes.


