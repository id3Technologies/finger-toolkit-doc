.. index:: 
  !DetectedFingerList.set Method
  
.. _detected_finger_list_set_class_method:

===============================================================================
DetectedFingerList.set Method
===============================================================================

Module: :ref:`DetectedFingerList<detected_finger_list_class>`

Definition
----------

Sets an item of the DetectedFingerList object.


.. tab-set::

    .. tab-item:: Python
      :sync: Python

      .. code:: Python

        set(self, index: int, detected_finger_item: DetectedFinger) -> None

      **Parameters**

        .. line-block::

          ``index`` int
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``detected_finger_item`` :ref:`DetectedFinger<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Dart
      :sync: Dart

      .. code:: Dart

        void set(int index, DetectedFinger detectedFingerItem)

      **Parameters**

        .. line-block::

          ``index`` int
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``detectedFingerItem`` :ref:`DetectedFinger<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: C#
      :sync: C#

      .. code:: C#

        public void Set(int index, DetectedFinger detectedFingerItem)

      **Parameters**

        .. line-block::

          ``index`` int
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``detectedFingerItem`` :ref:`DetectedFinger<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Java
      :sync: Java

      .. code:: Java

        public void set(int index, DetectedFinger detectedFingerItem) throws FingerException

      **Parameters**

        .. line-block::

          ``index`` int
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``detectedFingerItem`` :ref:`DetectedFinger<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: Swift
      :sync: Swift

      .. code:: Swift

        public func set(index: Int32, detectedFingerItem: DetectedFinger) throws

      **Parameters**

        .. line-block::

          ``index`` Int32
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``detectedFingerItem`` :ref:`DetectedFinger<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Exceptions**

        .. line-block::

          :ref:`FingerException<finger_exception>`
          An error has occurred during Finger Library execution.


    .. tab-item:: C
      :sync: C

      .. code:: C

        int id3DetectedFingerList_Set (
            ID3_DETECTED_FINGER_LIST hDetectedFingerList, 
            int index, 
            ID3_DETECTED_FINGER hDetectedFingerItem)

      **Parameters**

        .. line-block::

          ``hDetectedFingerList`` :ref:`ID3_DETECTED_FINGER_LIST<detected_finger_list_class>`
          :guilabel:`in` Handle to the DetectedFingerList object.

          ``index`` int
          :guilabel:`in` Index of the DetectedFinger item to set.

          ``hDetectedFingerItem`` :ref:`ID3_DETECTED_FINGER<detected_finger_class>`
          :guilabel:`in` DetectedFinger item to set.


      **Returns**

        .. line-block::

          ``int``
          An error code.
          See :ref:`id3FingerError<finger_error_enum>` file for the list of possible error codes.


